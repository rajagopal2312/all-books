Syntax
The syntax is as follows:
          case  $variable-name  in
                pattern1)       
     		    command1
                    ...
                    ....
                    commandN
                    ;;
                pattern2)
     		    command1
                    ...
                    ....
                    commandN
                    ;;            
                patternN)       
     		    command1
                    ...
                    ....
                    commandN
                    ;;
                *)              
          esac 

(or)

          case  $variable-name  in
                pattern1|pattern2|pattern3)       
     		    command1
                    ...
                    ....
                    commandN
                    ;;
                pattern4|pattern5|pattern6)
     		    command1
                    ...
                    ....
                    commandN
                    ;;            
                pattern7|pattern8|patternN)       
     		    command1
                    ...
                    ....
                    commandN
                    ;;
                *)              
          esac 

Example:

#!/bin/sh

echo "Enter a number between 1 and 10. "
read NUM

case $NUM in
	1) echo "one" ;;
	2) echo "two" ;;
	3) echo "three" ;;
	4) echo "four" ;;
	5) echo "five" ;;
	6) echo "six" ;;
	7) echo "seven" ;;
	8) echo "eight" ;;
	9) echo "nine" ;;
	10) echo "ten" ;;
	*) echo "INVALID NUMBER!" ;;
esac


Example:
#!/bin/sh

echo "Please talk to me ..."
while :
do
  read INPUT_STRING
  case $INPUT_STRING in
	hello)
		echo "Hello yourself!"
		;;
	bye)
		echo "See you again!"
		break
		;;
	*)
		echo "Sorry, I don't understand"
		;;
  esac
done
echo 
echo "That's all folks!"


Example:


#!/bin/bash
printf 'Which Linux distribution do you know? '
read DISTR

case $DISTR in
     ubuntu)
          echo "I know it! It is an operating system based on Debian."
          ;;
     centos|rhel)
          echo "Hey! It is my favorite Server OS!"
          ;;
     windows)
          echo "Very funny..."
          ;; 
     *)
          echo "Hmm, seems i've never used it."
          ;;
esac

Example


#!/bin/bash
#
# Case Statement
#
if [ -z $1 ]; then
   echo "You must specify a model name. e.g. Fiesta"
   exit
fi

case $1 in
     fiesta|Fiesta|FIESTA)
        echo "You entered $1"
        echo "The model $1 is manufactured by Ford"
        ;;
     mondeo|Mondeo|MONDEO)
        echo "You entered $1"
        echo "The model $1 is manufactured by Ford"
        ;;
     astra|Astra|ASTRA)
        echo "You entered $1"
        echo "The model $1 is manufactured by Vauxhall"
        ;;
     insignia|Insignia|INSIGNIA)
        echo "You entered $1"
        echo "The model $1 is manufactured by Vauxhall"
        ;;
     *)
        echo "Sorry, car $1 is not recognised"
esac


Example:

#!/bin/bash

# if no command line arg given
# set rental to Unknown
if [ -z $1 ]
then
  rental="*** Unknown vehicle ***"
elif [ -n $1 ]
then
# otherwise make first arg as a rental
  rental=$1
fi

# use case statement to make decision for rental
case $rental in
   "car") echo "For $rental rental is Rs.20 per k/m.";;
   "van") echo "For $rental rental is Rs.10 per k/m.";;
   "jeep") echo "For $rental rental is Rs.5 per k/m.";;
   "bicycle") echo "For $rental rental 20 paisa per k/m.";;
   "enfield") echo "For $rental rental Rs.3  per k/m.";;
   "thunderbird") echo "For $rental rental Rs.5 per k/m.";;
   *) echo "Sorry, I can not get a $rental rental  for you!";;
esac

Example:

#!/bin/bash

if [ $# -lt 2 ]
then
        echo "Usage : $0 Signalnumber PID"
        exit
fi

case "$1" in

1)  echo "Sending SIGHUP signal"
    kill -SIGHUP $2
    ;;
2)  echo  "Sending SIGINT signal"
    kill -SIGINT $2
    ;;
3)  echo  "Sending SIGQUIT signal"
    kill -SIGQUIT $2
    ;;
9) echo  "Sending SIGKILL signal"
   kill -SIGKILL $2
   ;;
*) echo "Signal number $1 is not processed"
   ;;
esac


Example:

#!/bin/bash
NOW=$(date +"%a")
case $NOW in
	Mon)	
		echo "Full backup";;
	Tue|Wed|Thu|Fri)
		echo "Partial backup";;
	Sat|Sun)	
		echo "No backup";;
	*) ;;
esac


Example:

#!/bin/sh
# Wedding guest meals

# These variables hold the counters.
NUM_CHICKEN=0
NUM_STEAK=0
ERR_MSG=""

# This will clear the screen before displaying the menu.
clear

while :
do
	# If error exists, display it
	if [ "$ERR_MSG" != "" ]; then
		echo "Error: $ERR_MSG"
		echo ""
	fi

	# Write out the menu options...
	echo "Chicken: $NUM_CHICKEN"
	echo "Steak: $NUM_STEAK"
	echo ""
	echo "Select an option:"
	echo " * 1: Chicken"
	echo " * 2: Steak"
	echo " * 3: Exit"

	# Clear the error message
	ERR_MSG=""

	# Read the user input
	read SEL

	case $SEL in
		1) NUM_CHICKEN=`expr $NUM_CHICKEN + 1` ;;
		2) NUM_STEAK=`expr $NUM_STEAK + 1` ;;
		3) echo "Bye!"; exit ;;
		*) ERR_MSG="Please enter a valid option!"
	esac

	# This will clear the screen so we can redisplay the menu.
	clear
done